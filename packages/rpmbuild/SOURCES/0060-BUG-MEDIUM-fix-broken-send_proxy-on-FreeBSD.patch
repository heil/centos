From 95742a43aaddf8a262339833688b75b5907f95c6 Mon Sep 17 00:00:00 2001
From: Willy Tarreau <w@1wt.eu>
Date: Tue, 3 Sep 2013 09:02:11 +0200
Subject: [PATCH 60/67] BUG/MEDIUM: fix broken send_proxy on FreeBSD

David Berard reported that send-proxy was broken on FreeBSD and tracked the
issue to be an error returned by send(). We already had the same issue in
the past in another area which was addressed by the following commit :

   0ea0cf6 BUG: raw_sock: also consider ENOTCONN in addition to EAGAIN

In fact, on Linux send() returns EAGAIN when the connection is not yet
established while other OSes return ENOTCONN. Let's consider ENOTCONN for
send-proxy there as the same as EAGAIN.

David confirmed that this change properly fixed the issue.

Another place was affected as well (health checks with send-proxy), and
was fixed.

This fix does not need any backport since it only affects 1.5.
---
 src/connection.c       | 2 +-
 src/stream_interface.c | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/connection.c b/src/connection.c
index f86afde..ad523b9 100644
--- a/src/connection.c
+++ b/src/connection.c
@@ -573,7 +573,7 @@ int conn_local_send_proxy(struct connection *conn, unsigned int flag)
 		goto out_wait;
 
 	if (ret < 0) {
-		if (errno == EAGAIN)
+		if (errno == EAGAIN || errno == ENOTCONN)
 			goto out_wait;
 		goto out_error;
 	}
diff --git a/src/stream_interface.c b/src/stream_interface.c
index 33f1d0e..6a21c64 100644
--- a/src/stream_interface.c
+++ b/src/stream_interface.c
@@ -468,7 +468,7 @@ int conn_si_send_proxy(struct connection *conn, unsigned int flag)
 			goto out_wait;
 
 		if (ret < 0) {
-			if (errno == EAGAIN)
+			if (errno == EAGAIN || errno == ENOTCONN)
 				goto out_wait;
 			goto out_error;
 		}
-- 
1.8.1.5

